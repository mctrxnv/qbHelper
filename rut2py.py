#! /usr/bin/env nix-shell
#! nix-shell -i python3 -p python3Packages.requests

"""
  RuTracker to qBittorrent Downloader (Magnet-only version)
"""

import argparse
import requests
from urllib.parse import urlparse, parse_qs

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è qBittorrent
QBITTORRENT_URL = "http://localhost:8080"
QBITTORRENT_USER = "admin"
QBITTORRENT_PASS = "adminadmin"

def get_magnet_from_rutracker(topic_id: int) -> str:
  """–ü–æ–ª—É—á–∞–µ—Ç magnet-—Å—Å—ã–ª–∫—É —Å Rutracker –ø–æ ID —Ç–µ–º—ã"""
  url = f"https://rutracker.org/forum/viewtopic.php?t={topic_id}"
  try:
      response = requests.get(
          url, 
          headers={
              "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
              "Accept-Language": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
          }
      )
      response.raise_for_status()
      
      # –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ magnet-—Å—Å—ã–ª–∫–∏
      for line in response.text.splitlines():
          if "magnet:?" in line and "href=" in line:
              magnet = line.split('href="')[1].split('"')[0]
              return magnet.replace("&amp;", "&")
      
      raise ValueError("Magnet-—Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
  except Exception as e:
      print(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ magnet-—Å—Å—ã–ª–∫–∏: {str(e)}")
      return None

def add_magnet_to_qbittorrent(magnet: str, 
                          save_path=None, 
                          category=None, 
                          paused=False,
                          qb_url=None,
                          qb_user=None,
                          qb_pass=None):
  """–î–æ–±–∞–≤–ª—è–µ—Ç magnet-—Å—Å—ã–ª–∫—É –≤ qBittorrent"""
  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  url = qb_url or QBITTORRENT_URL
  user = qb_user or QBITTORRENT_USER
  passwd = qb_pass or QBITTORRENT_PASS
  
  session = requests.Session()
  
  # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
  try:
      login = session.post(
          f"{url}/api/v2/auth/login",
          data={"username": user, "password": passwd}
      )
      if login.text != "Ok.":
          raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å qBittorrent")
  except Exception as e:
      print(f"üö® –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ qBittorrent: {str(e)}")
      return False

  # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  add_url = f"{url}/api/v2/torrents/add"
  data = {"urls": magnet}

  if save_path:
      data['savepath'] = save_path
  if category:
      data['category'] = category
  if paused:
      data['paused'] = 'true'

  # –û—Ç–ø—Ä–∞–≤–∫–∞
  try:
      response = session.post(add_url, data=data)
      if response.status_code == 200:
          print("‚úÖ –¢–æ—Ä—Ä–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ qBittorrent")
          return True
      else:
          print(f"üö® –û—à–∏–±–∫–∞ qBittorrent: {response.text}")
          return False
  finally:
      session.get(f"{url}/api/v2/auth/logout")

def parse_rutracker_url(url: str) -> int:
  """–ò–∑–≤–ª–µ–∫–∞–µ—Ç ID —Ç–µ–º—ã –∏–∑ URL Rutracker"""
  try:
      if url.isdigit():
          return int(url)
      
      parsed = urlparse(url)
      if 't=' in parsed.query:
          return int(parse_qs(parsed.query)['t'][0])
      elif '/t' in parsed.path:
          return int(parsed.path.split('/t')[-1].split('.')[0])
      raise ValueError("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID —Ç–µ–º—ã")
  except Exception as e:
      print(f"üö® –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ URL: {str(e)}")
      return None

def main():
  parser = argparse.ArgumentParser(
      description="üì• RuTracker to qBittorrent Downloader (Magnet-only)",
      formatter_class=argparse.ArgumentDefaultsHelpFormatter
  )
  parser.add_argument(
      "topic",
      help="ID —Ç–µ–º—ã –∏–ª–∏ URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ Rutracker (–Ω–∞–ø—Ä–∏–º–µ—Ä: 6673601 –∏–ª–∏ https://rutracker.org/forum/viewtopic.php?t=6673601)"
  )
  parser.add_argument(
      "--url",
      default=QBITTORRENT_URL,
      help="URL qBittorrent Web UI"
  )
  parser.add_argument(
      "--user",
      default=QBITTORRENT_USER,
      help="–õ–æ–≥–∏–Ω qBittorrent"
  )
  parser.add_argument(
      "--pass",
      dest="password",
      default=QBITTORRENT_PASS,
      help="–ü–∞—Ä–æ–ª—å qBittorrent"
  )
  parser.add_argument(
      "--save-path",
      help="–ü–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏"
  )
  parser.add_argument(
      "--category",
      help="–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ—Ä—Ä–µ–Ω—Ç–∞"
  )
  parser.add_argument(
      "--paused",
      action="store_true",
      help="–î–æ–±–∞–≤–∏—Ç—å —Ç–æ—Ä—Ä–µ–Ω—Ç –≤ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏"
  )

  args = parser.parse_args()

  # –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–º—ã
  topic_id = parse_rutracker_url(args.topic)
  if not topic_id:
      return

  print(f"üîç –ü–æ–ª—É—á–∞–µ–º magnet-—Å—Å—ã–ª–∫—É –¥–ª—è —Ç–µ–º—ã #{topic_id}...")
  magnet = get_magnet_from_rutracker(topic_id)
  
  if magnet:
      print("üîó –ù–∞–π–¥–µ–Ω–∞ magnet-—Å—Å—ã–ª–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º –≤ qBittorrent...")
      add_magnet_to_qbittorrent(
          magnet,
          save_path=args.save_path,
          category=args.category,
          paused=args.paused,
          qb_url=args.url,
          qb_user=args.user,
          qb_pass=args.password
      )
  else:
      print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å magnet-—Å—Å—ã–ª–∫—É. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
      print("- –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ Rutracker")
      print("- –¢–µ–º–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
      print("- Rutracker –∏–∑–º–µ–Ω–∏–ª —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã")

if __name__ == "__main__":
  main()
